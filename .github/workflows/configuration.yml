name: configuration

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Image name to use'
        default: hbontempo/postgres-hll
        required: true
        type: string
      config_file:
        description: 'Configuration file'
        default: debian.json
        required: true
        type: string
    # Map the workflow outputs to job outputs
    outputs:
      matrix:
        value: ${{ jobs.generate.outputs.matrix }}
      image_name: 
        value: ${{ jobs.generate.outputs.image_name }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.config-matrix.outputs.matrix }}
      image_name: ${{ env.IMAGE_NAME }}
    steps:
      -
        name: checkout
        uses: actions/checkout@v4
      - 
        id: config-matrix
        # Generates configuration matrix like:
        # [
        #    {
        #       "postgres": "latest"
        #       "hll": "2.17"
        #       "extra_tags": ["latest", "latest-latest"]
        #       "image_name": "hbontempo/postgres-hll"
        #       "dockerfile": "dockerfiles/debian.Dockerfile"
        #       "version": "latest-v2.17"
        #       "main_tag": "hbontempo/postgres-hll:latest-v2.17"
        #       "tags": "hbontempo/postgres-hll:latest-v2.17,hbontempo/postgres-hll:latest,hbontempo/postgres-hll:latest-latest"
        #    }
        # ]
        run: |
          echo "matrix=$(jq -c '[.[] | . + {platforms: (.platforms | join(",")), dockerfile: ("dockerfiles/" + .dockerfile), image_name: "${{ inputs.image_name }}",  version: (.postgres + "-v" + .hll)}]' < ./configs/${{ inputs.config_file }} | jq -c '[.[] | . + {main_tag: (.image_name + ":" + .version), tags: (([.image_name + ":" + .extra_tags[]]) | join(","))}]' | jq -c '[.[] | . + {tags: (.main_tag + "," + .tags)}]')" >> $GITHUB_OUTPUT